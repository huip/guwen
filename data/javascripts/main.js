// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require, exports, module) {
  var $, Backbone, QinfoView, QuestionView, RelativeView, Router, UserInfoView, WidgetsView, app_router, _ref;
  $ = require('$');
  Backbone = require('backbone');
  WidgetsView = require('./views/widgets');
  QuestionView = require('./views/question');
  QinfoView = require('./views/qinfo');
  RelativeView = require('./views/relative');
  UserInfoView = require('./views/uinfo');
  Router = (function(_super) {
    __extends(Router, _super);

    function Router() {
      _ref = Router.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Router.prototype.routes = {
      '': 'index',
      'index': 'index',
      'index/:page': 'index',
      'q/:qid': 'question',
      'u/:uid': 'uinfo'
    };

    return Router;

  })(Backbone.Router);
  app_router = new Router();
  app_router.on('route:index', function(page) {
    var questionView, widgetsView;
    if (page == null) {
      page = 1;
    }
    questionView = new QuestionView({
      el: $('.left-content'),
      id: page
    });
    return widgetsView = new WidgetsView({
      el: $('.right-content')
    });
  });
  app_router.on('route:question', function(qid) {
    var qinfoView, relativeView;
    qinfoView = new QinfoView({
      el: $('.left-content'),
      id: qid
    });
    return relativeView = new RelativeView({
      el: $('.right-content'),
      id: qid
    });
  });
  app_router.on('route:uinfo', function(uid) {
    var userInfoView;
    return userInfoView = new UserInfoView({
      el: $('.right-content'),
      id: uid
    });
  });
  return Backbone.history.start();
});
